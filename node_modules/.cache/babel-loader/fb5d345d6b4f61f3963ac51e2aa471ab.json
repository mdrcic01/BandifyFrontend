{"ast":null,"code":"var _jsxFileName = \"X:\\\\IntelliJ Java - projekti\\\\bandify-frontend\\\\src\\\\screens\\\\bands\\\\addBand.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Grid, InputLabel, ListItemText, MenuItem, OutlinedInput, Select, Snackbar, TextField } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport * as React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport addBandImg from \"../../assets/addBand.png\";\nimport { addBand, getAllCurrency, getAllGenre, getAllInstruments } from \"../../util/apiCalls\";\nimport \"./addBand.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddBand(_ref) {\n  _s();\n\n  let {\n    addBandModal\n  } = _ref;\n  const [bandName, setBandName] = React.useState(\"\");\n  const [price, setPrice] = React.useState(\"\");\n  const [selectValue, setSelectValue] = React.useState(\"\");\n  const [selectGenre, setSelectGenre] = React.useState(\"\");\n  const [selectInstrumentValue, setSelectInstrumentValue] = React.useState([]);\n  const [instruments, setInstruments] = React.useState([]);\n  const [currency, setCurrency] = React.useState([]);\n  const [genre, setGenre] = React.useState([]);\n  const [snackMessage, setSnackMessage] = React.useState(\"\");\n  const [openSnack, setOpenSnack] = React.useState(false);\n\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n\n  const handleBandNameChange = e => {\n    setBandName(e.target.value);\n  };\n\n  const handlePriceChange = e => {\n    setPrice(e.target.value);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250\n      }\n    }\n  };\n  React.useEffect(() => {\n    getAllInstrument();\n    getAllCurrency().then(resp => {\n      console.log(resp);\n      resp.json().then(data => {\n        console.log(data);\n        setCurrency(data);\n      });\n    }).catch(error => {\n      console.log(\"login user err \" + error);\n    });\n    getAllGenre().then(resp => {\n      console.log(resp);\n      resp.json().then(data => {\n        console.log(data);\n        setGenre(data);\n      });\n    }).catch(error => {\n      console.log(\"login user err \" + error);\n    });\n  }, []);\n\n  function getAllInstrument() {\n    getAllInstruments().then(resp => {\n      console.log(resp);\n      resp.json().then(data => {\n        console.log(data);\n        setInstruments(data);\n      });\n    }).catch(error => {\n      console.log(\"login user err \" + error);\n    });\n  }\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectValue(value); // console.log(value);\n  };\n\n  const handleGenreChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectGenre(value); // console.log(value);\n  };\n\n  const handleInstrumentChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectInstrumentValue(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  function isAnyRequiredFieldUnset() {\n    return bandName === \"\" || bandName === undefined || price === \"\" || price === undefined || selectValue === \"\" || selectValue === undefined || selectGenre === \"\" || selectGenre === undefined || selectInstrumentValue === \"\" || selectInstrumentValue === undefined;\n  }\n\n  function addNewBand() {\n    if (isAnyRequiredFieldUnset()) {\n      setSnackMessage(\"Fields cannot be blank\");\n      setOpenSnack(true);\n    } else {\n      addBand(bandName, price, selectValue, selectGenre, selectInstrumentValue).then(resp => {\n        console.log(resp);\n\n        if (resp.status === 201) {\n          console.log(resp);\n          setSnackMessage(\"Band added successfully\");\n          setOpenSnack(true);\n          addBandModal();\n        } else if (resp.status === 500) {\n          resp.json().then(data => {\n            alert(data.message);\n            setSnackMessage(data.message);\n            setOpenSnack(true);\n          });\n        }\n      }).catch(function (error) {\n        setSnackMessage(error);\n        setOpenSnack(true);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: addBandImg,\n            className: \"band-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-adornment-fname\",\n              label: \"Enter Band Name\",\n              size: \"small\",\n              required: true,\n              type: \"text\",\n              value: bandName,\n              onChange: handleBandNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            variant: \"standard\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-adornment-fname\",\n              label: \"Price\",\n              size: \"small\",\n              required: true,\n              type: \"text\",\n              value: price,\n              onChange: handlePriceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-multiple-checkbox-label\",\n              size: \"small\",\n              children: \"Select Instruments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-multiple-checkbox-label\",\n              id: \"demo-multiple-checkbox\",\n              multiple: true,\n              size: \"small\",\n              value: selectInstrumentValue,\n              onChange: handleInstrumentChange,\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Select Instruments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 24\n              }, this),\n              renderValue: selected => selected.join(\", \"),\n              MenuProps: MenuProps,\n              children: instruments.map(eachItem => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: eachItem.instrumentName,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectInstrumentValue.indexOf(eachItem.instrumentName) > -1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: eachItem.instrumentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)]\n              }, eachItem.instrumentName, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-multiple-checkbox-label\",\n              size: \"small\",\n              children: \"Select Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-multiple-checkbox-label\",\n              id: \"demo-multiple-checkbox\",\n              label: \"Select category\",\n              size: \"small\",\n              value: selectValue,\n              onChange: handleChange,\n              renderValue: selected => selected,\n              children: currency.map(eachItem => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: eachItem.code,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: eachItem.code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)\n              }, eachItem.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-multiple-checkbox-label\",\n              size: \"small\",\n              children: \"Select Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-multiple-checkbox-label\",\n              id: \"demo-multiple-checkbox\",\n              label: \"Select Genre\",\n              size: \"small\",\n              value: selectGenre,\n              onChange: handleGenreChange,\n              renderValue: selected => selected,\n              children: genre.map(eachItem => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: eachItem.genre,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: eachItem.genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)\n              }, eachItem.genre, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: \"#b545a9\"\n        },\n        onClick: addNewBand,\n        children: \"\\xA0ADD BAND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      style: {\n        whiteSpace: \"pre-wrap\",\n        width: \"300px\",\n        top: \"50%\",\n        bottom: \"50%\",\n        left: \"40%\",\n        right: \"50%\"\n      },\n      autoHideDuration: 3000,\n      anchorOrigin: {\n        vertical: \"center\",\n        horizontal: \"center\"\n      },\n      open: openSnack,\n      onClose: handleSnackClose,\n      message: snackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddBand, \"/kXtuuryMDoVHm+nZ2Hk/ppj3BY=\");\n\n_c = AddBand;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBand\");","map":{"version":3,"names":["FormControl","Grid","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","Snackbar","TextField","Button","Checkbox","DialogActions","DialogContent","React","Image","addBandImg","addBand","getAllCurrency","getAllGenre","getAllInstruments","AddBand","addBandModal","bandName","setBandName","useState","price","setPrice","selectValue","setSelectValue","selectGenre","setSelectGenre","selectInstrumentValue","setSelectInstrumentValue","instruments","setInstruments","currency","setCurrency","genre","setGenre","snackMessage","setSnackMessage","openSnack","setOpenSnack","handleSnackClose","handleBandNameChange","e","target","value","handlePriceChange","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","useEffect","getAllInstrument","then","resp","console","log","json","data","catch","error","handleChange","event","handleGenreChange","handleInstrumentChange","split","isAnyRequiredFieldUnset","undefined","addNewBand","status","alert","message","textAlign","selected","join","map","eachItem","instrumentName","indexOf","code","backgroundColor","whiteSpace","top","bottom","left","right","vertical","horizontal"],"sources":["X:/IntelliJ Java - projekti/bandify-frontend/src/screens/bands/addBand.js"],"sourcesContent":["import { FormControl, Grid, InputLabel, ListItemText, MenuItem, OutlinedInput, Select, Snackbar, TextField } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport * as React from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport addBandImg from \"../../assets/addBand.png\";\nimport {\n  addBand,\n  getAllCurrency,\n  getAllGenre,\n  getAllInstruments,\n} from \"../../util/apiCalls\";\nimport \"./addBand.css\"\n\nexport default function AddBand({ addBandModal }) {\n  const [bandName, setBandName] = React.useState(\"\");\n  const [price, setPrice] = React.useState(\"\");\n  const [selectValue, setSelectValue] = React.useState(\"\");\n  const [selectGenre, setSelectGenre] = React.useState(\"\");\n  const [selectInstrumentValue, setSelectInstrumentValue] = React.useState([]);\n  const [instruments, setInstruments] = React.useState([]);\n  const [currency, setCurrency] = React.useState([]);\n  const [genre, setGenre] = React.useState([]);\n  const [snackMessage, setSnackMessage] = React.useState(\"\");\n  const [openSnack, setOpenSnack] = React.useState(false);\n  const handleSnackClose = () => {\n    setOpenSnack(!openSnack);\n  };\n  const handleBandNameChange = (e) => {\n    setBandName(e.target.value);\n  };\n  const handlePriceChange = (e) => {\n    setPrice(e.target.value);\n  };\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  React.useEffect(() => {\n    getAllInstrument();\n    getAllCurrency()\n      .then((resp) => {\n        console.log(resp);\n        resp.json().then((data) => {\n          console.log(data);\n          setCurrency(data);\n        });\n      })\n      .catch((error) => {\n        console.log(\"login user err \" + error);\n      });\n\n    getAllGenre()\n      .then((resp) => {\n        console.log(resp);\n        resp.json().then((data) => {\n          console.log(data);\n          setGenre(data);\n        });\n      })\n      .catch((error) => {\n        console.log(\"login user err \" + error);\n      });\n  }, []);\n\n  function getAllInstrument() {\n    getAllInstruments()\n      .then((resp) => {\n        console.log(resp);\n        resp.json().then((data) => {\n          console.log(data);\n          setInstruments(data);\n        });\n      })\n      .catch((error) => {\n        console.log(\"login user err \" + error);\n      });\n  }\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectValue(value);\n    // console.log(value);\n  };\n\n  const handleGenreChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectGenre(value);\n    // console.log(value);\n  };\n\n  const handleInstrumentChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectInstrumentValue(\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n\n  function isAnyRequiredFieldUnset() {\n    return (\n      bandName === \"\" ||\n      bandName === undefined ||\n      price === \"\" ||\n      price === undefined ||\n      selectValue === \"\" ||\n      selectValue === undefined ||\n      selectGenre === \"\" ||\n      selectGenre === undefined ||\n      selectInstrumentValue === \"\" ||\n      selectInstrumentValue === undefined\n    );\n  }\n\n  function addNewBand() {\n    if (isAnyRequiredFieldUnset()) {\n      setSnackMessage(\"Fields cannot be blank\");\n      setOpenSnack(true);\n    } else {\n      addBand(bandName, price, selectValue, selectGenre, selectInstrumentValue)\n        .then((resp) => {\n          console.log(resp);\n          if (resp.status === 201) {\n            console.log(resp);\n            setSnackMessage(\"Band added successfully\");\n            setOpenSnack(true);\n            addBandModal();\n          } else if (resp.status === 500) {\n            resp.json().then((data) => {\n              alert(data.message);\n              setSnackMessage(data.message);\n              setOpenSnack(true);\n            });\n          }\n        })\n        .catch(function (error) {\n          setSnackMessage(error);\n          setOpenSnack(true);\n        });\n    }\n  }\n  return (\n    <React.Fragment>\n      <DialogContent>\n        <Grid container>\n          <Grid item xs={5}>\n            <Image\n              src={addBandImg}\n              className={\"band-img\"}\n            />\n          </Grid>\n          <Grid item xs={1} />\n          <Grid item xs={6}>\n            <br />\n            <FormControl\n              required={true}\n              fullWidth\n              variant=\"standard\"\n              style={{ textAlign: \"center\" }}\n            >\n              <TextField\n                id=\"standard-adornment-fname\"\n                label=\"Enter Band Name\"\n                size=\"small\"\n                required={true}\n                type={\"text\"}\n                value={bandName}\n                onChange={handleBandNameChange}\n              />\n            </FormControl>\n            <br />\n            <br />\n            <FormControl\n              required={true}\n              fullWidth\n              variant=\"standard\"\n              style={{ textAlign: \"center\" }}\n            >\n              <TextField\n                id=\"standard-adornment-fname\"\n                label=\"Price\"\n                size=\"small\"\n                required={true}\n                type={\"text\"}\n                value={price}\n                onChange={handlePriceChange}\n              />\n            </FormControl>\n\n            <br />\n            <br />\n\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-multiple-checkbox-label\" size=\"small\">\n                Select Instruments\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-checkbox-label\"\n                id=\"demo-multiple-checkbox\"\n                multiple\n                size=\"small\"\n                value={selectInstrumentValue}\n                onChange={handleInstrumentChange}\n                input={<OutlinedInput label=\"Select Instruments\" />}\n                renderValue={(selected) => selected.join(\", \")}\n                MenuProps={MenuProps}\n              >\n                {instruments.map((eachItem) => (\n                  <MenuItem\n                    key={eachItem.instrumentName}\n                    value={eachItem.instrumentName}\n                  >\n                    <Checkbox\n                      checked={\n                        selectInstrumentValue.indexOf(eachItem.instrumentName) >\n                        -1\n                      }\n                    />\n                    <ListItemText primary={eachItem.instrumentName} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <br />\n            <br />\n\n            <FormControl fullWidth variant=\"outlined\" required={true}>\n              <InputLabel id=\"demo-multiple-checkbox-label\" size=\"small\">\n                Select Currency\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-checkbox-label\"\n                id=\"demo-multiple-checkbox\"\n                label=\"Select category\"\n                size=\"small\"\n                value={selectValue}\n                onChange={handleChange}\n                renderValue={(selected) => selected}\n              >\n                {currency.map((eachItem) => (\n                  <MenuItem key={eachItem.code} value={eachItem.code}>\n                    <ListItemText primary={eachItem.code} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <br />\n            <br />\n\n            <FormControl fullWidth variant=\"outlined\" required={true}>\n              <InputLabel id=\"demo-multiple-checkbox-label\" size=\"small\">\n                Select Genre\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-checkbox-label\"\n                id=\"demo-multiple-checkbox\"\n                label=\"Select Genre\"\n                size=\"small\"\n                value={selectGenre}\n                onChange={handleGenreChange}\n                renderValue={(selected) => selected}\n              >\n                {genre.map((eachItem) => (\n                  <MenuItem key={eachItem.genre} value={eachItem.genre}>\n                    <ListItemText primary={eachItem.genre} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions align=\"center\">\n        <Button\n          variant=\"contained\"\n          style={{ backgroundColor: \"#b545a9\" }}\n          onClick={addNewBand}\n        >\n          &nbsp;ADD BAND\n        </Button>\n      </DialogActions>\n      <Snackbar\n        style={{\n          whiteSpace: \"pre-wrap\",\n          width: \"300px\",\n          top: \"50%\",\n          bottom: \"50%\",\n          left: \"40%\",\n          right: \"50%\",\n        }}\n        autoHideDuration={3000}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n        open={openSnack}\n        onClose={handleSnackClose}\n        message={snackMessage}\n      />\n    </React.Fragment>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}